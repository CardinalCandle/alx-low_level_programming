/alx-low_level_programming/0x00-hello_world

--------------------------------------------------------------------------------
0-preprocessor:
#!/bin/bash
cpp $CFILE c

--------------------------------------------------------------------------------
commands.txt:

--------------------------------------------------------------------------------
README.md:
readme

--------------------------------------------------------------------------------
1-compiler:
#!/bin/bash
gcc -c $CFILE -o ${CFILE/.c/.o}

--------------------------------------------------------------------------------
2-assembler:
#!/bin/bash
gcc -S $CFILE -o ${CFILE/.c/.s}

--------------------------------------------------------------------------------
3-name:
#!/bin/bash
gcc -c $CFILE -o cisfun

--------------------------------------------------------------------------------
4-puts.c:
#include<stdio.h>

/**
* main - Outputs a character string using puts instead of printf.
*
* Return: Always 0
*/
int main(void)
{
	char str[64] = "\"Programming is like building a multilingual puzzle";

	puts(str);


	return (0);
}

--------------------------------------------------------------------------------
5-printf.c:
#include<stdio.h>

/**
* main - Outputs a character string using printf instead of puts.
*
* Return: Always 0
*/
int main(void)
{
	printf("with proper grammar, but the outcome is a piece of art,\n");

	return (0);
}

--------------------------------------------------------------------------------
6-size.c:
#include<stdio.h>

/**
* main - Outputs a the size of various data types using printf.
*
* Return: Always 0
*/
int main(void)
{

printf("Size of a char: %lu byte(s)\n", sizeof(char));

printf("Size of an int: %lu byte(s)\n", sizeof(int));

printf("Size of a long int: %lu byte(s)\n", sizeof(long));

printf("Size of a long long int: %lu byte(s)\n", sizeof(long long));

printf("Size of a float: %lu byte(s)\n", sizeof(float));

return (0);
}

--------------------------------------------------------------------------------
100-intel:
#!/bin/bash
gcc -S -masm=intel $CFILE -o ${CFILE/.c/.s}

--------------------------------------------------------------------------------
101-quote.c:
#include<stdio.h>

/**
* main - Outputs a character string to STDERR using fprintf.
*
* Return: Always 0
*/
int main(void)
{

char r[99] = "and that piece of art is useful\" - Dora Korpar, 2015-10-19\n";

fprintf(stderr, "%s", r);

return (1);
}

